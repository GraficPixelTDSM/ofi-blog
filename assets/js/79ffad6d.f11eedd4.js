(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[966],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return u},kt:function(){return d}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},u=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),d=a,m=p["".concat(c,".").concat(d)]||p[d]||f[d]||i;return r?t.createElement(m,o(o({ref:n},u),{},{components:r})):t.createElement(m,o({ref:n},u))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6113:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var t=r(2122),a=r(9756),i=(r(7294),r(3905)),o=["components"],l={},c="For Schleife",s={unversionedId:"Programmieren 1/Turtles/for-loop",id:"Programmieren 1/Turtles/for-loop",isDocsHomePage:!1,title:"For Schleife",description:"Programmiersprachen k\xf6nnen Code-Teile mehrfach nacheinander ausf\xfchren. In Python gibt es dabei zwei Konzepte. Die for Schleife und die while Schleife.",source:"@site/docs/Programmieren 1/Turtles/002-for-loop.md",sourceDirName:"Programmieren 1/Turtles",slug:"/Programmieren 1/Turtles/for-loop",permalink:"/ofi-blog/Programmieren 1/Turtles/for-loop",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Programmieren 1/Turtles/002-for-loop.md",version:"current",lastUpdatedAt:1624924060,formattedLastUpdatedAt:"6/28/2021",sidebarPosition:2,frontMatter:{},sidebar:"sidebar",previous:{title:"Ein Python Algorithmus",permalink:"/ofi-blog/Programmieren 1/Turtles/intro"},next:{title:"While Schleife",permalink:"/ofi-blog/Programmieren 1/Turtles/while-loop"}},u=[{value:"Was ist die Ausgabe des folgenden Programms?",id:"was-ist-die-ausgabe-des-folgenden-programms",children:[]}],f={toc:u};function p(e){var n=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},f,l,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"for-schleife"},"For Schleife"),(0,i.kt)("p",null,"Programmiersprachen k\xf6nnen Code-Teile mehrfach nacheinander ausf\xfchren. In Python gibt es dabei zwei Konzepte. Die ",(0,i.kt)("inlineCode",{parentName:"p"},"for")," Schleife und die ",(0,i.kt)("inlineCode",{parentName:"p"},"while")," Schleife."),(0,i.kt)("p",null,"Die ",(0,i.kt)("inlineCode",{parentName:"p"},"for")," Schleife kann man sich wie ein Ticket-Schalter vorstellen. Der Verk\xe4ufer am Schalter bedient der Reihe nach jede Person in der Warteschlange und wiederholt jedesmal dieselbe Aufgabe: ",(0,i.kt)("em",{parentName:"p"},"den Kunden bedienen")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Warteschlange",src:r(3735).Z})),(0,i.kt)("p",null,"In Python wird die Warteschleife als Liste in eckigen Klammern geschrieben:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"for person in ['Jack', 'Maria', 'Reto']:\n    print(f'Guten Tag {person}, wie kann ich helfen?')\n    print('...')\n    print('Auf wiedersehen')\n")),(0,i.kt)("p",null,"Die Personen ",(0,i.kt)("em",{parentName:"p"},"Jack"),", ",(0,i.kt)("em",{parentName:"p"},"Maria")," und ",(0,i.kt)("em",{parentName:"p"},"Reto")," werden nacheinander begr\xfcsst, bedient und verabschiedet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-txt"},"Guten Tag Jack, wie kann ich helfen?\n...\nAuf wiedersehen.\n\nGuten Tag Maria, wie kann ich helfen?\n...\nAuf wiedersehen.\n\nGuten Tag Reto, wie kann ich helfen?\n...\nAuf wiedersehen.\n")),(0,i.kt)("p",null,"Um einen beliebigen Code-Teil mehrfach nacheinander auszuf\xfchren, k\xf6nnen wir nun auch Zahlen als Warteschleife verwenden:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"for counter in [0, 1, 2, 3]:\n    forward(100)\n    left()\n")),(0,i.kt)("p",null,"F\xfcr jede Zahl wird der Code-Teil wiederholt:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"# 0\nforward(100)\nleft()\n# 1\nforward(100)\nleft()\n# 2\nforward(100)\nleft()\n# 3\nforward(100)\nleft()\n")),(0,i.kt)("p",null,"Oder in Kurzschreibweise:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"for counter in range(4):\n    forward(100)\n    left()\n")),(0,i.kt)("p",null,"wobei ",(0,i.kt)("inlineCode",{parentName:"p"},"range(4)")," eine Warteschleife mit ",(0,i.kt)("inlineCode",{parentName:"p"},"4")," Elementen erzeugt."),(0,i.kt)("h2",{id:"was-ist-die-ausgabe-des-folgenden-programms"},"Was ist die Ausgabe des folgenden Programms?"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from gbsl_turtle import *\n\ngoto(-30, 0, draw=False)\n\nfor counter in range(8):\n    forward(60)\n    left(45)\n\ngoto(-30, 100, draw=False)\nsetheading(180)     # Orientierung nach links: \u25c0\ufe0f\n\nfor counter in range(8):\n    forward(5)\n    right(45)\n\n\ngoto(30, 100, draw=False)\nsetheading(0)       # Orientierung nach rechts: \u25b6\ufe0f\n\n\nfor counter in range(8):\n    forward(5)\n    left(45)\n\n\ngoto(-48, 40, draw=False)\nsetheading(-45)     # Orientierung nach rechts unten: \u2198\ufe0f\n\nfor counter in range(3):\n    forward(40)\n    left(45)\n\ndone()\n")))}p.isMDXComponent=!0},3735:function(e,n,r){"use strict";n.Z=r.p+"assets/images/queue-8064bf7946c4724e4fbeb25e2d35cb83.png"}}]);