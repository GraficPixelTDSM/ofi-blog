(self.webpackChunkofi_blog_versioned=self.webpackChunkofi_blog_versioned||[]).push([[8073],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return u},kt:function(){return f}});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=n.createContext({}),m=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=m(e.components);return n.createElement(s.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=m(t),f=i,p=g["".concat(s,".").concat(f)]||g[f]||c[f]||a;return t?n.createElement(p,o(o({ref:r},u),{},{components:t})):n.createElement(p,o({ref:r},u))}));function f(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=g;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var m=2;m<a;m++)o[m]=t[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},44554:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return u},default:function(){return g}});var n=t(22122),i=t(19756),a=(t(67294),t(3905)),o=["components"],l={title:"Flussdiagramm"},s="Flussdiagramm [^1]",m={unversionedId:"Programmieren-1/Algorithmen/Flussdiagramm",id:"version-25h/Programmieren-1/Algorithmen/Flussdiagramm",isDocsHomePage:!1,title:"Flussdiagramm",description:"Ein Flussdiagramm (engl. flow chart) oder Programmablaufplan ist eine grafische Darstellungsform eines Algorithmus. Es besteht aus Elementen, welche einzelne Schritte des Algorithmus darstellen. Pfeile, welche die Elemente verbinden, geben die Reihenfolge an, in welcher die Schritte ausgef\xfchrt werden m\xfcssen.",source:"@site/versioned_docs/version-25h/03-Programmieren-1/01-Algorithmen/05-Flussdiagramm.md",sourceDirName:"03-Programmieren-1/01-Algorithmen",slug:"/Programmieren-1/Algorithmen/Flussdiagramm",permalink:"/25h/Programmieren-1/Algorithmen/Flussdiagramm",editUrl:"https://github.com/lebalz/ofi-blog/edit/main/versioned_docs/version-25h/03-Programmieren-1/01-Algorithmen/05-Flussdiagramm.md",version:"25h",sidebarPosition:5,frontMatter:{title:"Flussdiagramm"},sidebar:"version-25h/sidebar",previous:{title:"Notenblatt",permalink:"/25h/Programmieren-1/Algorithmen/Notenblatt"},next:{title:"RoboZZle",permalink:"/25h/Programmieren-1/Algorithmen/Uebungen/robozzle"}},u=[],c={toc:u};function g(e){var r=e.components,l=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},c,l,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"flussdiagramm"},"Flussdiagramm ",(0,a.kt)("sup",{parentName:"h1",id:"fnref-1"},(0,a.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))),(0,a.kt)("p",null,"Ein ",(0,a.kt)("strong",{parentName:"p"},"Flussdiagramm")," (engl. flow chart) oder ",(0,a.kt)("strong",{parentName:"p"},"Programmablaufplan")," ist eine grafische Darstellungsform eines Algorithmus. Es besteht aus Elementen, welche einzelne Schritte des Algorithmus darstellen. Pfeile, welche die Elemente verbinden, geben die Reihenfolge an, in welcher die Schritte ausgef\xfchrt werden m\xfcssen."),(0,a.kt)("p",null,"Das Flussdiagramm unten links beschreibt, wie Spaghetti gekocht werden. Das Flussdiagramm unten rechts beschreibt, wie Spaghetti Napoletana gekocht werden. Dabei wird der Spaghetti-Algorithmus mit einem ",(0,a.kt)("strong",{parentName:"p"},"Aufruf")," (rot) wiederverwendet."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Flussdiagramm",src:t(61429).Z,title:"Author: Stefan Rothe @ Creative Commons 4.0, Bearbeitet"})),(0,a.kt)("div",{className:"footnotes"},(0,a.kt)("hr",{parentName:"div"}),(0,a.kt)("ol",{parentName:"div"},(0,a.kt)("li",{parentName:"ol",id:"fn-1"},"Quelle: ",(0,a.kt)("a",{parentName:"li",href:"https://rothe.io/?page=prog1/1-algo/4-recipe/"},"rothe.io"),(0,a.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}g.isMDXComponent=!0},61429:function(e,r,t){"use strict";r.Z=t.p+"assets/images/flowchart-spaghetti-3ff66a5e815ebb255ac2d252a6c2344e.svg"}}]);